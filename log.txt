DEBUG:root:Started
DEBUG:matplotlib:(private) matplotlib data path: C:\Users\pierr\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:matplotlib data path: C:\Users\pierr\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\matplotlib\mpl-data
DEBUG:matplotlib:CONFIGDIR=C:\Users\pierr\.matplotlib
DEBUG:matplotlib:matplotlib version 3.3.4
DEBUG:matplotlib:interactive is False
DEBUG:matplotlib:platform is win32
DEBUG:matplotlib:loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'nt', 'winreg', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', 'encodings.cp1252', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'ntpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'site', 'yaml.error', 'yaml.tokens', 'yaml.events', 'yaml.nodes', 'yaml.reader', 'yaml.scanner', 'yaml.parser', 'yaml.composer', 'math', '_datetime', 'datetime', '_struct', 'struct', 'binascii', 'base64', 'yaml.constructor', 'yaml.resolver', 'yaml.loader', 'yaml.emitter', 'yaml.serializer', 'yaml.representer', 'yaml.dumper', 'cython_runtime', 'yaml._yaml', 'yaml.cyaml', 'yaml', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'posixpath', 'fnmatch', 'glob', '_ctypes', 'ctypes._endian', 'ctypes', 'numpy._distributor_init', 'textwrap', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'errno', 'urllib', 'urllib.parse', 'pathlib', '_compat_pickle', '_pickle', 'pickle', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numbers', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._asarray', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', '_ast', 'ast', 'signal', '_weakrefset', 'threading', 'msvcrt', '_winapi', 'subprocess', 'platform', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.stride_tricks', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'weakref', 'numpy.lib.format', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_21', 'numpy.random._common', '_hashlib', '_blake2', 'hashlib', 'hmac', '_bisect', 'bisect', '_random', '_sha512', 'random', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'utils', 'traceback', '_string', 'string', 'atexit', 'logging', 'configmanager', 'pricing', 'learners', 'context', 'gettext', 'argparse', 'locale', 'experiments', 'experiments.experiment_3', 'matplotlib', 'distutils', 'distutils.version', 'pprint', 'tempfile', 'gzip', 'shlex', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', '_uuid', 'uuid', 'matplotlib._animation_data', 'matplotlib.animation', 'copy', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', '__future__', 'six', 'six.moves', 'cycler', 'matplotlib.rcsetup', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'matplotlib._version', 'matplotlib.ft2font', 'dateutil._version', 'dateutil', 'kiwisolver']
DEBUG:matplotlib:CACHEDIR=C:\Users\pierr\.matplotlib
DEBUG:matplotlib.font_manager:Using fontManager instance from C:\Users\pierr\.matplotlib\fontlist-v330.json
DEBUG:matplotlib.pyplot:Loaded backend tkagg version unknown.
DEBUG:matplotlib.pyplot:Loaded backend TkAgg version unknown.
DEBUG:root:ContextGenerator.__init__() created context c_0->[['Y', 'I'], ['Y', 'D'], ['A', 'I'], ['A', 'D']]
DEBUG:root:Context.split_evaluation() Context.split_evaluation() -> p1 = 0|p2 = 0|mu0 = nan|mu1 = nan| mu2 = nan
DEBUG:root:Context.split_evaluation() Context.split_evaluation() -> p1 = 0|p2 = 0|mu0 = nan|mu1 = nan| mu2 = nan
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 0|class: ['A', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:Context.split_evaluation() Context.split_evaluation() -> p1 = 0.0|p2 = 1.0|mu0 = 3.087129070824723|mu1 = nan| mu2 = 3.042572892243662
DEBUG:root:Context.split_evaluation() Context.split_evaluation() -> p1 = 0.0|p2 = 1.0|mu0 = 3.087129070824723|mu1 = nan| mu2 = 3.042572892243662
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 0|class: ['A', 'I']|pulled_arm: 9|reward: 0
DEBUG:root:Context.split_evaluation() Context.split_evaluation() -> p1 = 0.0|p2 = 1.0|mu0 = 2.292572892243662|mu1 = nan| mu2 = 2.271054989627439
DEBUG:root:Context.split_evaluation() Context.split_evaluation() -> p1 = 0.5|p2 = 0.5|mu0 = 2.292572892243662|mu1 = 2.542572892243662| mu2 = 3.042572892243662
DEBUG:root:ContextGenerator.generate() created context c_1->[['Y', 'I'], ['A', 'I']],c_2->[['Y', 'D'], ['A', 'D']]
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:Context.split_evaluation() Context.split_evaluation() -> p1 = 1.0|p2 = 0.0|mu0 = 2.542572892243662|mu1 = 2.587129070824723| mu2 = nan
DEBUG:root:Context.split_evaluation() Context.split_evaluation() -> p1 = 1.0|p2 = 0.0|mu0 = 2.27817468419245|mu1 = 2.587129070824723| mu2 = nan
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 2|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:Context.split_evaluation() Context.split_evaluation() -> p1 = 0.5|p2 = 0.5|mu0 = 2.542572892243662|mu1 = 2.587129070824723| mu2 = 3.087129070824723
DEBUG:root:ContextGenerator.generate() created context c_2->[['Y', 'I']],c_3->[['A', 'I']]
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 2|class: ['A', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:Context.split_evaluation() Context.split_evaluation() -> p1 = 0.3333333333333333|p2 = 0.6666666666666666|mu0 = 2.686870769553395|mu1 = 2.587129070824723| mu2 = 3.042572892243662
DEBUG:root:ContextGenerator.generate() created context c_3->[['Y', 'D']],c_4->[['A', 'D']]
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 8
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 7|reward: 6.5
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 8|reward: 7
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 2|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 8|reward: 7
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 2|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 1|reward: 3
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 2|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 1|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 2|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 1|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 0|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 8|reward: 7
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 7
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 1|reward: 3
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 1|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 1|reward: 3
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 1|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 2|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 1|reward: 3
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 2|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 2|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 1|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 8|reward: 7
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 1|reward: 3
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 6|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 7
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 8|reward: 7
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 1|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 2|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 1|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 8|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 4
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 1|reward: 3
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 3|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 8|reward: 7
DEBUG:root:PersonGenerator.generate_person() class: 0|labels: ['Y', 'I']
DEBUG:root:Context.update()|id: 2|class: ['Y', 'I']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 7|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 4|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 9|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 8|reward: 7
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 1|reward: 0
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 8|reward: 7
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 3|labels: ['A', 'D']
DEBUG:root:Context.update()|id: 4|class: ['A', 'D']|pulled_arm: 5|reward: 0.0
DEBUG:root:PersonGenerator.generate_person() class: 1|labels: ['Y', 'D']
DEBUG:root:Context.update()|id: 3|class: ['Y', 'D']|pulled_arm: 5|reward: 5.5
DEBUG:root:PersonGenerator.generate_person() class: 2|labels: ['A', 'I']
DEBUG:root:Context.update()|id: 3|class: ['A', 'I']|pulled_arm: 5|reward: 0.0
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\pierr\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=15.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=15.0 to DejaVu Sans ('C:\\Users\\pierr\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0.
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal 290 normal>) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbd.ttf) normal normal 700 normal>) = 6.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarali.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal 600 normal>) = 10.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal 300 normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal 350 normal>) = 11.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal 500 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariblk.ttf) normal normal 900 normal>) = 6.888636363636364
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arialbi.ttf) italic normal 700 normal>) = 7.698636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaral.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (courbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 500 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constanb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal 900 normal>) = 10.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal 700 normal>) = 4.971363636363637
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (times.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbell.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal 350 normal>) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal 350 normal>) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal 350 normal>) = 10.0975
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal 300 normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal 300 normal>) = 11.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal 290 normal>) = 10.1545
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal 400 normal>) = 11.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal 600 normal>) = 11.24
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal 700 normal>) = 11.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal 700 normal>) = 3.9713636363636367
DEBUG:matplotlib.font_manager:findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal 900 normal>) = 11.525
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Calibri' (calibril.ttf) normal normal 300 normal>) = 10.145
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal 700 normal>) = 10.335
DEBUG:matplotlib.font_manager:findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
DEBUG:matplotlib.font_manager:findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=18.0 to DejaVu Sans ('C:\\Users\\pierr\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python39\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
